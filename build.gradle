plugins {
    id "java"
    id "idea"
    id "org.jetbrains.kotlin.jvm"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "net.minecraftforge.gradle.forge"
    id "org.spongepowered.mixin"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = "https://maven.minecraftforge.net/" }
    maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
    maven { url = "https://jitpack.io/" }
    maven { url = "https://repo.viaversion.com/"}
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    clientJvmArgs += ["-Dfml.coreMods.load=net.minusmc.viaversionplugin.injection.forge.ViaVersionTransformerLoader"]
}

sourceSets {
    main.java.srcDirs += 'src/main/java'
    main.java.srcDirs += '../shared/main/java'
    main.resources.srcDirs += '../shared/main/resources'
}

configurations {
    include
    implementation.extendsFrom(include)
}

dependencies {
    compile ("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: "guava"
        exclude module: "commons-io"
        exclude module: "gson"
        exclude module: "launchwrapper"
        exclude module: "log4j-core"
        exclude module: "slf4j-api"
    }

    annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT")
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    
    include "com.viaversion:viaversion:${project.viaversion_version}"
    include "com.viaversion:viabackwards:${project.viabackwards_version}"
    include "com.viaversion:viarewind-common:${project.viarewind_version}"
    include "org.yaml:snakeyaml:${project.snake_yml_version}"

    include "org.slf4j:slf4j-api:${project.slf4j_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn(processResources)
classes.dependsOn(moveResources)

jar {
    manifest.attributes(
        "MixinConfigs": "viaversionplugin.forge.mixin.json",
        "tweakClass": "org.spongepowered.asm.launch.MixinTweaker",
        "TweakOrder": 0,
        "FMLCorePluginContainsFMLMod": "net.minusmc.viaversionplugin.injection.forge.ViaVersionTransformerLoader"
    )

    enabled = false
}

mixin {
    add sourceSets.main, "viaversionplugin.mixins.refmap.json"
}

shadowJar {
    archiveClassifier.set("")
    archiveName = jar.archiveName
    configurations = [project.configurations.include]
    compileJava.options.encoding = "UTF-8"

    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    exclude "LICENSE.txt"

    exclude "META-INF/maven/**"
    exclude "META-INF/versions/**"

    exclude "org/apache/**"

    exclude "native-binaries/*"
    exclude "META-INF/versions/**"
}

reobf {
    shadowJar {}
}

configurations {
    external
    compile.extendsFrom(external)
}

tasks.reobfShadowJar.mustRunAfter shadowJar

tasks.reobfJar.dependsOn(shadowJar)
